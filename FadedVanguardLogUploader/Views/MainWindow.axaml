<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:EVTCLogUploader.ViewModels"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:p="clr-namespace:EVTCLogUploader.Resources.Lang"
		xmlns:enums="clr-namespace:EVTCLogUploader.Enums"
		xmlns:converter="clr-namespace:EVTCLogUploader.Utils.Converter"
		xmlns:views="clr-namespace:EVTCLogUploader.Views"
        mc:Ignorable="d"
		d:DesignWidth="1000"
		d:DesignHeight="600"
		MinWidth="800"
		MinHeight="450"
		x:Name="EVTCLogUploader"
        x:Class="EVTCLogUploader.Views.MainWindow"
        Icon="/Assets/Logo.png"
        Title="EVTC Log Uploader"
		ExtendClientAreaToDecorationsHint="True"	
		RequestedThemeVariant="{Binding Theme}"
		BorderThickness="5">
	
	<Window.DataContext>
		<vm:MainWindowViewModel/>
	</Window.DataContext>
	<Window.Resources>
		<converter:EnumConverter x:Key="sortConverter"/>
		<converter:EncounterConverter x:Key="encounterConveter" />
		<converter:ThemeConverter x:Key="themeConverter" />
	</Window.Resources>

	<Window.Styles>
		<Style Selector="Window[WindowState=Maximized]">
			<Setter Property="Padding" Value="8" />
		</Style>
		<Style Selector="TextBlock.h1">
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="FontWeight" Value="Bold"/>
		</Style>
		<Style Selector="TextBlock.p1">
			<Setter Property="FontSize" Value="12"/>
		</Style>
		<Style Selector="TextBlock.p2">
			<Setter Property="FontSize" Value="8"/>
		</Style>
		<Style Selector="CheckBox.Menu">
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="ClipToBounds" Value="False"/>
			<Setter Property="IsHitTestVisible" Value="False"/>
		</Style>
	</Window.Styles>

	<Grid RowDefinitions="auto,auto,*,auto">

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="auto" MinWidth="200"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<!-- Menu Backgound -->
		<StackPanel Grid.ColumnSpan="10"
					Grid.RowSpan="1"
					Name="TopRow"
					Background="{DynamicResource SystemControlBackgroundBaseLowBrush}"/>

		<!-- Menu -->
		<Grid Grid.ColumnSpan="10"
			  ColumnDefinitions="auto,auto,*,auto">

			<Image Width="25"  
				   Margin="5,0"
				   Source="/Assets/Logo.png"
				   VerticalAlignment="Center"
				   HorizontalAlignment="Center"/>
			
			<!-- Menu Buttons -->
			<Menu Grid.Column="1"
				  Margin="4,0,0,0">
				<!-- File -->
				<MenuItem Header="{x:Static p:Resources.LNG_Menu_File}">
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_File_SelectFolder}"
							  Command="{Binding FolderCommand}"
							  CommandParameter="{Binding ElementName=EVTCLogUploader}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource folder_add_regular}"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_File_SaveSettings}"
							  Command="{Binding SaveCommand}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource save_regular}"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_File_WipeData}"
							  Command="{Binding WipeDBCommand}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource delete_forever_regular}"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_File_Exit}"
							  Command="{Binding CloseCommand}"
							  CommandParameter="{Binding ElementName=EVTCLogUploader}">
					</MenuItem>
				</MenuItem>
				<!-- Settings -->
				<MenuItem Header="{x:Static p:Resources.LNG_Menu_Settings}">
					<!-- Language -->
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Settings_Lang}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource local_language_regular}"/>
						</MenuItem.Icon>
						<MenuItem Header="English"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="en-GB"/>
						<MenuItem Header="Deutsch"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="de"/>
						<MenuItem Header="Italiano"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="it"/>
						<MenuItem Header="Français"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="fr"/>
						<MenuItem Header="Portugais Brésilien"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="pt-BR"/>
						<MenuItem Header="Polski"
								  Command="{Binding LanguageCommand}"
								  CommandParameter="pl-PL"/>
					</MenuItem>
					<Separator/>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Settings_DarkMode}"
							  Command="{Binding ModeCommand}">
						<MenuItem.Icon>
							<CheckBox IsChecked="{Binding Theme, 
									  Converter={StaticResource themeConverter}}"
									  Classes="Menu"/>
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<!-- Filter -->
				<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter}">
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter_Prof}">
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Guardian}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Guardian}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Warrior}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Warrior}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Engineer}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Engineer}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Ranger}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Ranger}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Thief}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Thief}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Elementalist}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Elementalist}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Mesmer}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Mesmer}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Necromancer}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Necromancer}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Prof_Revenant}"
								  Command="{Binding FilterProfCommand}"
								  CommandParameter="{x:Static enums:Profession.Revenant}"/>
					</MenuItem>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter_FileType}">
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter_FileType_Evtc}"
								  Command="{Binding FilterFileTypeCommand}"
								  CommandParameter="{x:Static enums:FileType.EVTC}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter_FileType_ZEvtc}"
								  Command="{Binding FilterFileTypeCommand}"
								  CommandParameter="{x:Static enums:FileType.ZEVTC}"/>
						<MenuItem Header="{x:Static p:Resources.LNG_Menu_Filter_FileType_EvtcZip}"
								  Command="{Binding FilterFileTypeCommand}"
								  CommandParameter="{x:Static enums:FileType.EVTCZIP}"/>
					</MenuItem>
					<Separator/>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Settings_ClearFilter}"
							  Command="{Binding ClearFilterCommand}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource eraser_tool_regular}"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Settings_HideErrors}"
							  Command="{Binding ErrorHiddenCommand}">
						<MenuItem.Icon>
							<CheckBox IsChecked="{Binding FilterError}"
									  Classes="Menu"/>
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
				<!-- Help -->
				<MenuItem Header="{x:Static p:Resources.LNG_Menu_Help}">
					<MenuItem Header="{x:Static p:Resources.LNG_Menu_Help_About}"
							  Command="{Binding AboutCommand}">
						<MenuItem.Icon>
							<PathIcon Data="{StaticResource question_regular}"/>
						</MenuItem.Icon>
					</MenuItem>
				</MenuItem>
			</Menu>
		</Grid>
		
		<!-- Row 1 -->
		<Grid Grid.Row="1"
			  Grid.Column="0"
			  Grid.ColumnSpan="2"
			  ColumnDefinitions="auto,auto,auto,auto"
			  RowDefinitions="auto,auto">

			<Button Grid.Column="0"
					Grid.Row="0"
					Margin="5"
					Command="{Binding HideFilterCommand}"
					IsVisible="{Binding HideFilters}">
				<PathIcon Data="{StaticResource caret_down_regular}"/>
			</Button>
			
			<TextBlock Grid.Column="1"
					   Margin="0,0,5,0"
					   VerticalAlignment="Center"
					   Text="{x:Static p:Resources.LNG_Filter_From_SemiColon}"
					   TextAlignment="End"/>
			<DatePicker Grid.Column="2"
						Padding="0,0,0,0"
						SelectedDate="{Binding DateFrom, Mode=TwoWay}"
						VerticalAlignment="Center"/>
			<TimePicker Grid.Column="3"
						Padding="5,0,0,0"
						SelectedTime="{Binding TimeFrom, Mode=TwoWay}"
						VerticalAlignment="Center"/>

			<Button Grid.Column="0"
					Grid.Row="0"
					Margin="5"
					Command="{Binding HideFilterCommand}"
					IsVisible="{Binding !HideFilters}">
				<PathIcon Data="{StaticResource caret_up_regular}"/>
			</Button>

			<TextBlock Grid.Column="1"
					   Grid.Row="1"
					   Margin="0,0,5,0"
					   VerticalAlignment="Center"
					   IsVisible="{Binding !HideFilters}"
					   Text="{x:Static p:Resources.LNG_Filter_To_SemiColon}"
					   TextAlignment="End"/>
			<DatePicker Grid.Column="2"
						Grid.Row="1"
						Padding="0,0,0,0"
						IsVisible="{Binding !HideFilters}"
						SelectedDate="{Binding DateTo, Mode=TwoWay}"
						VerticalAlignment="Center"/>
			<TimePicker Grid.Column="3"
						Grid.Row="1"
						Padding="5,0,0,0"
						IsVisible="{Binding !HideFilters}"
						SelectedTime="{Binding TimeTo, Mode=TwoWay}"
						VerticalAlignment="Center"/>
		</Grid>
		
		<!-- Filter view -->
		<Border Background="{DynamicResource SystemControlBackgroundListLowBrush}"
				BorderBrush="{DynamicResource SystemControlBackgroundListMediumBrush}"
				BorderThickness="2"
				Grid.Row="2"
				Grid.RowSpan="1"
				Margin="5">
			<TreeView ItemsSource="{Binding FilterNodes}"
					  SelectedItems="{Binding SelectedFilterNodes}"
					  SelectionMode="Multiple">
				<TreeView.ItemTemplate>
					<TreeDataTemplate ItemsSource="{Binding SubNodes}">
						<TextBlock Text="{Binding Title}"
								   Padding="0,0,10,0"/>
					</TreeDataTemplate>
				</TreeView.ItemTemplate>
			</TreeView>
		</Border>
		
		<!-- Row 2 -->
		<DockPanel Margin="5"
				   Grid.Row="2"
				   Grid.Column="1"
				   HorizontalAlignment="Stretch">
			<!-- Progress bar + Upload button -->
			<Grid DockPanel.Dock="Bottom" 
				  Margin="0,4"
				  ColumnDefinitions="*,auto">
				<ProgressBar Grid.Column="0"
							 Value="{Binding ProgressBarValue}"
							 Maximum="{Binding ProgressBarMax}"
							 ToolTip.Tip="{x:Static p:Resources.LNG_List_Bar_Tooltip}"
							 Margin="10,0"/>

				<Button Grid.Column="1"
						HorizontalAlignment="Right"
						Command="{Binding UploadCommand}"
						CommandParameter="{Binding ElementName=EVTCLogUploader}"
						ToolTip.Tip="{x:Static p:Resources.LNG_List_Upload_Tooltip}"
						Content="{x:Static p:Resources.LNG_List_Upload}"/>
			</Grid>

			<!-- Data grid -->
			<Border Background="{DynamicResource SystemControlBackgroundListLowBrush}"
					BorderBrush="{DynamicResource SystemControlBackgroundListMediumBrush}"
					BorderThickness="2">
				<Grid>
					<DataGrid ItemsSource="{Binding Items}"
							  AutoGenerateColumns="False"
							  IsReadOnly="True"
							  SelectionMode="Extended"
							  CanUserReorderColumns="True"
							  CanUserResizeColumns="True"
							  Name="DataGrid">
						<DataGrid.Columns>
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_Encounter}"
												Binding="{Binding Boss, Mode=OneWay, Converter={StaticResource encounterConveter}}"/>
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_CharcterName}"
												Binding="{Binding MainCharcterName}" />
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_Username}"
												Binding="{Binding MainUserName}"/>
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_Profesion}"
												Binding="{Binding ProfAndSpec}"/>
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_Duration}"
												Binding="{Binding Length}"/>
							<DataGridTextColumn IsReadOnly="True"
												Header="{x:Static p:Resources.LNG_DataGrid_Header_Date}"
												Binding="{Binding CreationDate}"/>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</Border>
		</DockPanel>

		<!-- Row 3 -->
		<StackPanel Grid.Row="3" Margin="10,0,0,10" Orientation="Horizontal">
			<TextBlock Classes="p2"
					   Text="{Binding Items.Count}"
					   Margin="0,0,2,0"/>
			<TextBlock Classes="p2"
					   Text="{x:Static p:Resources.LNG_File_Count}"/>
		</StackPanel>

		<!-- Design -->
		<StackPanel ZIndex="-3"
					Grid.Column="0"
					Grid.Row="0"
					Grid.ColumnSpan="10"
					Grid.RowSpan="10">
			<StackPanel.RenderTransform>
				<RotateTransform Angle="-55"/>
			</StackPanel.RenderTransform>

			<StackPanel Width="10000"
						Height="16"
						Margin="0,200,0,0"
						Background="{DynamicResource 
						SystemControlBackgroundBaseLowBrush}"
						Opacity="1"/>
			<StackPanel Width="10000"
						Height="10000"
						Margin="0,4,0,0"
						Background="{DynamicResource 
						SystemControlBackgroundBaseLowBrush}"
						Opacity="1"/>
		</StackPanel>
	</Grid>
</Window>
